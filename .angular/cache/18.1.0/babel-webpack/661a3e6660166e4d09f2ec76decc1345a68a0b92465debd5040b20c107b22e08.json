{"ast":null,"code":"import { of } from 'rxjs';\nimport { delay, finalize } from 'rxjs';\nimport { DelayComponent } from '../components/delay/delay.component';\nimport * as i0 from \"@angular/core\";\nexport let DelayService = /*#__PURE__*/(() => {\n  class DelayService {\n    viewContainerRef;\n    constructor() {}\n    setViewContainerRef(vcr) {\n      this.viewContainerRef = vcr;\n    }\n    applyDelayWithLoading(ms = 1000) {\n      const loadingComponent = this.createLoadingComponent();\n      return of(undefined).pipe(delay(ms), finalize(() => {\n        this.destroyLoadingComponent(loadingComponent);\n      }));\n    }\n    createLoadingComponent() {\n      if (!this.viewContainerRef) {\n        console.error('ViewContainerRef is not set. Please set it before calling applyDelayWithLoading.');\n        return null;\n      }\n      const componentRef = this.viewContainerRef.createComponent(DelayComponent);\n      componentRef.instance.show = true;\n      return componentRef;\n    }\n    destroyLoadingComponent(componentRef) {\n      if (componentRef) {\n        componentRef.instance.show = false;\n        componentRef.destroy();\n      }\n    }\n    static ɵfac = function DelayService_Factory(t) {\n      return new (t || DelayService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DelayService,\n      factory: DelayService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DelayService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}